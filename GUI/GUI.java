package GUI;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import EnigmaProccessing.*;
import java.util.*;
/**
 *
 * @author Joseph Sun
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        firstRotor = new javax.swing.JSpinner();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        secondRotor = new javax.swing.JSpinner();
        thirdRotor = new javax.swing.JSpinner();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane5 = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextPane6 = new javax.swing.JTextPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        switchBoardBox = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        input.setColumns(20);
        input.setRows(5);
        jScrollPane1.setViewportView(input);

        output.setEditable(false);
        output.setColumns(20);
        output.setRows(10);
        jScrollPane2.setViewportView(output);

        jTextPane1.setEditable(false);
        jTextPane1.setText("Input");
        jScrollPane3.setViewportView(jTextPane1);

        jTextPane2.setEditable(false);
        jTextPane2.setText("Output");
        jScrollPane4.setViewportView(jTextPane2);

        firstRotor.setValue(rotor1Set());

        jScrollPane5.setToolTipText("First Rotor");

        jTextPane3.setEditable(false);
        jTextPane3.setText("First Rotor:");
        jScrollPane5.setViewportView(jTextPane3);

        jScrollPane6.setToolTipText("First Rotor");

        jTextPane4.setEditable(false);
        jTextPane4.setText("Second Rotor:");
        jScrollPane6.setViewportView(jTextPane4);

        secondRotor.setValue(rotor2Set());

        thirdRotor.setValue(rotor3Set());

        jScrollPane7.setToolTipText("First Rotor");

        jTextPane5.setEditable(false);
        jTextPane5.setText("Third Rotor:");
        jTextPane5.setRequestFocusEnabled(false);
        jScrollPane7.setViewportView(jTextPane5);

        jTextPane6.setEditable(false);
        jTextPane6.setText("Swtich Board");
        jScrollPane8.setViewportView(jTextPane6);

        switchBoardBox.setColumns(20);
        switchBoardBox.setRows(10);
        switchBoardBox.setText(returnSwitchBoard());
        switchBoardBox.setToolTipText("");
        switchBoardBox.setWrapStyleWord(true);
        jScrollPane9.setViewportView(switchBoardBox);

        jButton1.setText("Translate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(thirdRotor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondRotor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstRotor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 20, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane8)
                            .addComponent(jScrollPane5)
                            .addComponent(firstRotor)
                            .addComponent(secondRotor)
                            .addComponent(jScrollPane6)
                            .addComponent(thirdRotor)
                            .addComponent(jScrollPane7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //rotors
    public Rotors r = new Rotors();
    public SwitchBoardSys sb = new SwitchBoardSys();
    public int rotor1Key = 1;
    public int rotor2Key = 1;
    public int rotor3Key = 1;
    private final String DEFAULT = "ab cd ef gh ij kl mn op qr st uv wx yz";
    private String switchBoard = DEFAULT;
    
    public Object rotor1Set(){
        return rotor1Key;
    }
    public Object rotor2Set(){
        return rotor2Key;
    }
    public Object rotor3Set(){
        return rotor3Key;
    }
    public String returnSwitchBoard(){
        return switchBoard;
    }
    
    //when the encrypt button is pressed
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        //encrypt button is pressed
        String outputString = "";
        String inputString = input.getText();
        
        //read spinners
        try{
            rotor1Key = Integer.parseInt(firstRotor.getValue().toString());
            rotor2Key = Integer.parseInt(secondRotor.getValue().toString());
            rotor3Key = Integer.parseInt(thirdRotor.getValue().toString());
        }catch(NumberFormatException e){
            rotor1Key = 1;
            rotor2Key = 1;
            rotor3Key = 1;
            outputString += "Dial error! ";
        }
        
        //SwitchBoard
        switchBoard = switchBoardBox.getText();
        if(!sb.switchBoardCheck(switchBoard)){
            outputString += " SwitchBoard error! Switched to default! ";
            switchBoard = DEFAULT;
        }
        
        inputString = sb.switchBoardOperation(inputString, switchBoard);
        
        char[] inputStringInCharArray = inputString.toCharArray();
        
        for(char letter: inputStringInCharArray){
            
            if(Character.isLetter(letter)){
                int tempInt = translator(Character.toLowerCase(letter));
                
                //rotor code here
                tempInt = r.proccess1(tempInt, rotor1Key); tempInt = quickCheck(tempInt, rotor1Key);
                tempInt = r.proccess2(tempInt, rotor2Key); tempInt = quickCheck(tempInt, rotor2Key);
                tempInt = r.proccess3(tempInt, rotor3Key); tempInt = quickCheck(tempInt, rotor3Key);
                tempInt = r.reflect(tempInt);
                tempInt = r.proccess3R(tempInt, rotor3Key); tempInt = quickCheck(tempInt, rotor3Key);
                tempInt = r.proccess2R(tempInt, rotor2Key); tempInt = quickCheck(tempInt, rotor2Key);
                tempInt = r.proccess1R(tempInt, rotor1Key); tempInt = quickCheck(tempInt, rotor1Key);
                
                
                if(Character.isUpperCase(letter)){
                    outputString += Character.toUpperCase(translator(tempInt));
                }
                else{
                    outputString += translator(tempInt);
                }
                
                rotor1Key++;
                if(rotor1Key > 26){ rotor2Key++; rotor1Key = 1; }
                if(rotor2Key > 26){ rotor3Key++; rotor2Key = 1; }
                if(rotor3Key > 26){ rotor3Key = 1; }
            }
            else {
                outputString += letter;
            }
            
        }
        
         outputString = sb.switchBoardOperation(outputString, switchBoard);
        
        //output information
        output.setText(outputString);
        firstRotor.setValue(rotor1Set());
        secondRotor.setValue(rotor2Set());
        thirdRotor.setValue(rotor3Set());
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * letter to number
     * @param input Lower Case only!!!
     * @return 
     */
    private int translator(char input){
        switch(input){
            case 'a':
                return 1;
            case 'b':
                return 2;
            case 'c':
                return 3;
            case 'd':
                return 4;
            case 'e':
                return 5;
            case 'f':
                return 6;
            case 'g':
                return 7;
            case 'h':
                return 8;
            case 'i':
                return 9;
            case 'j':
                return 10;
            case 'k':
                return 11;
            case 'l':
                return 12;
            case 'm':
                return 13;
            case 'n':
                return 14;
            case 'o':
                return 15;
            case 'p':
                return 16;
            case 'q':
                return 17;
            case 'r':
                return 18;
            case 's':
                return 19;
            case 't':
                return 20;
            case 'u':
                return 21;
            case 'v':
                return 22;
            case 'w':
                return 23;
            case 'x':
                return 24;
            case 'y':
                return 25;
            case 'z':
                return 26;
            default:
                return -1;
        }
        
    }
    private char translator(int input){
        
        switch(input){
        case 1:
            return 'a';
        case 2:
            return 'b';
        case 3:
            return 'c';
        case 4:
            return 'd';
        case 5:
            return 'e';
        case 6:
            return 'f';
        case 7:
            return 'g';
        case 8:
            return 'h';
        case 9:
            return 'i';
        case 10:
            return 'j';
        case 11:
            return 'k';
        case 12:
            return 'l';
        case 13:
            return 'm';
        case 14:
            return 'n';
        case 15:
            return 'o';
        case 16:
            return 'p';
        case 17:
            return 'q';
        case 18:
            return 'r';
        case 19:
            return 's';
        case 20:
            return 't';
        case 21:
            return 'u';
        case 22:
            return 'v';
        case 23:
            return 'w';
        case 24:
            return 'x';
        case 25:
            return 'y';
        case 26:
            return 'z';
        default:
            return ' ';
        }
    }
    private int quickCheck(int input, int rotorKey){
        
        if(input - rotorKey + 1 <= 0){
            return 26 + (input - rotorKey + 1);
        }
        else{
            return input - rotorKey + 1;
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner firstRotor;
    private javax.swing.JTextArea input;
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JTextPane jTextPane5;
    private javax.swing.JTextPane jTextPane6;
    private javax.swing.JTextArea output;
    private javax.swing.JSpinner secondRotor;
    private javax.swing.JTextArea switchBoardBox;
    private javax.swing.JSpinner thirdRotor;
    // End of variables declaration//GEN-END:variables
}
